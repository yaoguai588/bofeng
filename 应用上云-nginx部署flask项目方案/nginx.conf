# /usr/local/nginx/conf/nginx.conf
user root; # 配置用户或用户组，否则有可能会出错
worker_processes auto; # 允许生成的进程数，默认为1
error_log /var/log/nginx/error.log; # 指定日志路径，级别。这个设置可以放入全局块，http块，server块，级别以此为：debug|info|notice|warn|error|crit|alert|emerg
pid /run/nginx.pid; # 指定nginx进程运行文件存放地址
 
# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events { # events块
    worker_connections 1024; # 最大连接数，默认为512
}

http { # http块
	include             /etc/nginx/mime.types; # 文件扩展名与文件类型映射表
    default_type        application/octet-stream;  # 默认文件类型，默认为text/plain
    # log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"'; # 自定义日志格式
    # access_log  /var/log/nginx/access.log  main;
    sendfile            on; # 允许sendfile方式传输文件，默认为off，可以在http块，server块，location块。
    # tcp_nopush          on; 
    # tcp_nodelay         on;
    keepalive_timeout   65; #连接超时时间，默认为75s，可以在http，server，location块。
    # types_hash_max_size 2048;
    
    # 设定负载均衡后台服务器列表, backend可以修改为其它名字
	upstream backend {
		#ip_hash; # 指定负载均衡的方式，3种，默认为轮询。
		server 192.168.10.100:8080 max_fails=2 fail_timeout=30s ;
		server 192.168.10.101:8080 max_fails=2 fail_timeout=30s ;
		server 127.0.0.1:8027;
		server 127.0.0.1:8028;
		server 127.0.0.1:8029;
	}
	
    server { # server块
        listen       80; # 通过80端口访问nginx时
        server_name  localhost; # 服务器名，监听地址
        location / { # location块，# 请求的url过滤，正则匹配，~为区分大小写，~*为不区分大小写。对以 / 所有地址进行负载均衡
        	root html;  # 定义服务器的默认网站根目录位置。如果locationURL匹配的是子目录或文件，root没什么作用，一般放在server指令里面或/下
            # index index.html;  #定义路径下默认访问的文件名，一般跟着root放
            # proxy_pass  http://mysvr; 请求转向backend定义的服务器列表，即反向代理，设置被代理服务器的端口或套接字以及URL
            # deny 127.0.0.1;  #拒绝的ip
            # allow 172.18.5.54; #允许的ip   
	        include uwsgi_params;
	        uwsgi_pass backend;    # 非集群设置的是uWSGI套接字地址，集群则直接使用负载均衡组名
	        # uwsgi_pass 127.0.0.1:5000; 
        }
		
		location /static { # 请求静态文件时
			alias /PycharmProjects/flaskForum/static;	
		}

        error_page 404 /404.html; # 错误页
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html; # 错误页
            location = /50x.html {
        }
    }
  }